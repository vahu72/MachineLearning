Neural Network Tools for STM32 family v1.7.0 (stm.ai v8.1.0-19520)
Created date          : 2024-01-15 12:54:20
Parameters            : generate --name model_pendulum -m /home/louison/Documents/S9/machine_learning/MachineLearning/pythonProject/model.h5 -m /home/louison/Documents/S9/machine_learning/MachineLearning/pythonProject/model.json --type keras --compression none --verbosity 1 --workspace /tmp/mxAI_workspace1482471085077513528723293635612767 --output /home/louison/.stm32cubemx/model_pendulum_output --allocate-inputs --series stm32l4 --allocate-outputs

Exec/report summary (generate)
--------------------------------------------------------------------------------------------------------------
model file         :   /home/louison/Documents/S9/machine_learning/MachineLearning/pythonProject/model.h5     
model file         :   /home/louison/Documents/S9/machine_learning/MachineLearning/pythonProject/model.json   
type               :   keras                                                                                  
c_name             :   model_pendulum                                                                         
compression        :   none                                                                                   
options            :   allocate-inputs, allocate-outputs                                                      
optimization       :   balanced                                                                               
target/series      :   stm32l4                                                                                
workspace dir      :   /tmp/mxAI_workspace1482471085077513528723293635612767                                  
output dir         :   /home/louison/.stm32cubemx/model_pendulum_output                                       
model_fmt          :   float                                                                                  
model_name         :   model                                                                                  
model_hash         :   12c593e11a9a313941aa6a388b581ce3                                                       
params #           :   9,226 items (36.04 KiB)                                                                
--------------------------------------------------------------------------------------------------------------
input 1/1          :   'input_0' (domain:activations/**default**)                                             
                   :   300 items, 1.17 KiB, ai_float, float, (1,100,3)                                        
output 1/1         :   'dense_3' (domain:activations/**default**)                                             
                   :   1 items, 4 B, ai_float, float, (1,1)                                                   
macc               :   737,511                                                                                
weights (ro)       :   36,904 B (36.04 KiB) (1 segment)                                                       
activations (rw)   :   60,000 B (58.59 KiB) (1 segment) *                                                     
ram (total)        :   60,000 B (58.59 KiB) = 60,000 + 0 + 0                                                  
--------------------------------------------------------------------------------------------------------------
(*) 'input'/'output' buffers can be used from the activations buffer

Model name - model ['input_0'] ['dense_3']
------ ------------------------------- ---------------------------- -------------- --------- --------------- --- ----------------- ------------------ ----------------------------- 
m_id   layer (type,original)           oshape                       param/size          macc    connected to   | c_size            c_macc             c_type                        
------ ------------------------------- ---------------------------- -------------- --------- --------------- --- ----------------- ------------------ ----------------------------- 
0      input_0 (Input, None)           [b:None,h:100,h:100,c:3]                                                | +1,600(+100.0%)   +50,000(+100.0%)   dense_of32/nl_of32[0, 1]      
       dense_dense (Dense, Dense)      [b:None,h:100,h:100,c:100]   400/1,600         40,000         input_0   | -1,600(-100.0%)   -40,000(-100.0%)   
       dense (Nonlinearity, Dense)     [b:None,h:100,h:100,c:100]                     10,000     dense_dense   |                   -10,000(-100.0%)   
------ ------------------------------- ---------------------------- -------------- --------- --------------- --- ----------------- ------------------ ----------------------------- 
2      dense_1_dense (Dense, Dense)    [b:None,h:100,h:100,c:50]    5,050/20,200     505,000           dense   |                   +50,000(+9.9%)     dense_of32/nl_of32[2, 3]      
       dense_1 (Nonlinearity, Dense)   [b:None,h:100,h:100,c:50]                      50,000   dense_1_dense   |                   -50,000(-100.0%)   
------ ------------------------------- ---------------------------- -------------- --------- --------------- --- ----------------- ------------------ ----------------------------- 
4      dense_2_dense (Dense, Dense)    [b:None,h:100,h:100,c:25]    1,275/5,100      127,500         dense_1   |                   +2,500(+2.0%)      dense_of32/nl_of32[4, 5]      
       dense_2 (Nonlinearity, Dense)   [b:None,h:100,h:100,c:25]                       2,500   dense_2_dense   |                   -2,500(-100.0%)    
------ ------------------------------- ---------------------------- -------------- --------- --------------- --- ----------------- ------------------ ----------------------------- 
5      flatten (Reshape, Flatten)      [b:None,c:2500]                                               dense_2   |                                      
------ ------------------------------- ---------------------------- -------------- --------- --------------- --- ----------------- ------------------ ----------------------------- 
6      dense_3_dense (Dense, Dense)    [b:None,c:1]                 2,501/10,004       2,501         flatten   |                   +10(+0.4%)         dense_of32/nl_of32[o][6, 7]   
       dense_3 (Nonlinearity, Dense)   [b:None,c:1]                                       10   dense_3_dense   |                   -10(-100.0%)       
------ ------------------------------- ---------------------------- -------------- --------- --------------- --- ----------------- ------------------ ----------------------------- 
model/c-model: macc=737,511/737,511  weights=36,904/36,904  activations=--/60,000 io=--/0



Generated C-graph summary
------------------------------------------------------------------------------------------------------------------------
model name            : model
c-name                : model_pendulum
c-node #              : 8
c-array #             : 17
activations size      : 60000 (1 segment)
weights size          : 36904 (1 segment)
macc                  : 737511
inputs                : ['input_0_output']
outputs               : ['dense_3_output']

C-Arrays (17)
------ ----------------------- ------------- ------------------------- ------------- --------- --------- 
c_id   name (*_array)          item/size     domain/mem-pool           c-type        fmt       comment   
------ ----------------------- ------------- ------------------------- ------------- --------- --------- 
0      dense_1_dense_bias      50/200        weights/weights           const float   float32             
1      dense_2_dense_weights   1250/5000     weights/weights           const float   float32             
2      input_0_output          300/1200      activations/**default**   float         float32   /input    
3      dense_2_dense_bias      25/100        weights/weights           const float   float32             
4      dense_dense_output      10000/40000   activations/**default**   float         float32             
5      dense_output            10000/40000   activations/**default**   float         float32             
6      dense_3_dense_weights   2500/10000    weights/weights           const float   float32             
7      dense_1_dense_output    5000/20000    activations/**default**   float         float32             
8      dense_3_dense_bias      1/4           weights/weights           const float   float32             
9      dense_1_output          5000/20000    activations/**default**   float         float32             
10     dense_2_dense_output    2500/10000    activations/**default**   float         float32             
11     dense_2_output          2500/10000    activations/**default**   float         float32             
12     dense_3_dense_output    1/4           activations/**default**   float         float32             
13     dense_3_output          1/4           activations/**default**   float         float32   /output   
14     dense_dense_weights     300/1200      weights/weights           const float   float32             
15     dense_dense_bias        100/400       weights/weights           const float   float32             
16     dense_1_dense_weights   5000/20000    weights/weights           const float   float32             
------ ----------------------- ------------- ------------------------- ------------- --------- --------- 

C-Layers (8)
------ ---------------- ---- ------------ -------- ------- -------------------------- ------------------ 
c_id   name (*_layer)   id   layer_type   macc     rom     tensors                    shape (array id)   
------ ---------------- ---- ------------ -------- ------- -------------------------- ------------------ 
0      dense_dense      0    dense        40000    1600    I: input_0_output          (1,100,3) (2)      
                                                           W: dense_dense_weights     (3,100) (14)       
                                                           W: dense_dense_bias        (100,) (15)        
                                                           O: dense_dense_output      (1,100,100) (4)    
------ ---------------- ---- ------------ -------- ------- -------------------------- ------------------ 
1      dense            0    nl           10000    0       I: dense_dense_output      (1,100,100) (4)    
                                                           O: dense_output            (1,100,100) (5)    
------ ---------------- ---- ------------ -------- ------- -------------------------- ------------------ 
2      dense_1_dense    2    dense        505000   20200   I: dense_output            (1,100,100) (5)    
                                                           W: dense_1_dense_weights   (100,50) (16)      
                                                           W: dense_1_dense_bias      (50,) (0)          
                                                           O: dense_1_dense_output    (1,100,50) (7)     
------ ---------------- ---- ------------ -------- ------- -------------------------- ------------------ 
3      dense_1          2    nl           50000    0       I: dense_1_dense_output    (1,100,50) (7)     
                                                           O: dense_1_output          (1,100,50) (9)     
------ ---------------- ---- ------------ -------- ------- -------------------------- ------------------ 
4      dense_2_dense    4    dense        127500   5100    I: dense_1_output          (1,100,50) (9)     
                                                           W: dense_2_dense_weights   (50,25) (1)        
                                                           W: dense_2_dense_bias      (25,) (3)          
                                                           O: dense_2_dense_output    (1,100,25) (10)    
------ ---------------- ---- ------------ -------- ------- -------------------------- ------------------ 
5      dense_2          4    nl           2500     0       I: dense_2_dense_output    (1,100,25) (10)    
                                                           O: dense_2_output          (1,100,25) (11)    
------ ---------------- ---- ------------ -------- ------- -------------------------- ------------------ 
6      dense_3_dense    6    dense        2501     10004   I: dense_2_output0         (1,2500) (11)      
                                                           W: dense_3_dense_weights   (2500,1) (6)       
                                                           W: dense_3_dense_bias      (1,) (8)           
                                                           O: dense_3_dense_output    (1,1) (12)         
------ ---------------- ---- ------------ -------- ------- -------------------------- ------------------ 
7      dense_3          6    nl           10       0       I: dense_3_dense_output    (1,1) (12)         
                                                           O: dense_3_output          (1,1) (13)         
------ ---------------- ---- ------------ -------- ------- -------------------------- ------------------ 



Number of operations per c-layer
------- ------ ----------------------- --------- -------------- -------- ---------- 
c_id    m_id   name (type)                   #op           type   #param   sparsity 
------- ------ ----------------------- --------- -------------- -------- ---------- 
0       0      dense_dense (dense)        40,000   smul_f32_f32      400     0.0425 
1       0      dense (nl)                 10,000     op_f32_f32          
2       2      dense_1_dense (dense)     505,000   smul_f32_f32    5,050     0.0000 
3       2      dense_1 (nl)               50,000     op_f32_f32          
4       4      dense_2_dense (dense)     127,500   smul_f32_f32    1,275     0.0000 
5       4      dense_2 (nl)                2,500     op_f32_f32          
6       6      dense_3_dense (dense)       2,501   smul_f32_f32    2,501     0.0000 
7       6      dense_3 (nl)                   10     op_f32_f32          
------- ------ ----------------------- --------- -------------- -------- ---------- 
total                                    737,511                   9,226     0.0018 

Number of operation types
---------------- --------- ----------- 
operation type           #           % 
---------------- --------- ----------- 
smul_f32_f32       675,001       91.5% 
op_f32_f32          62,510        8.5% 

Complexity report (model)
------ --------------- ------------------------- ------------------------- -------- 
m_id   name            c_macc                    c_rom                     c_id     
------ --------------- ------------------------- ------------------------- -------- 
0      input_0         ||                 6.8%   ||                 4.3%   [0, 1]   
2      dense_1_dense   ||||||||||||||||  75.3%   ||||||||||||||||  54.7%   [2, 3]   
4      dense_2_dense   ||||              17.6%   ||||              13.8%   [4, 5]   
6      dense_3_dense   |                  0.3%   ||||||||          27.1%   [6, 7]   
------ --------------- ------------------------- ------------------------- -------- 
macc=737,511 weights=36,904 act=60,000 ram_io=0
 
 Requested memory size per segment ("stm32l4" series)
 ----------------------------- ------- -------- ------- -------- 
 module                           text   rodata    data      bss 
 ----------------------------- ------- -------- ------- -------- 
 NetworkRuntime810_CM4_GCC.a     7,812        0       0        0 
 model_pendulum.o                  652       64   2,292      160 
 model_pendulum_data.o              56       48      88        0 
 lib (toolchain)*                  628       24       1        0 
 ----------------------------- ------- -------- ------- -------- 
 RT total**                      9,148      136   2,381      160 
 ----------------------------- ------- -------- ------- -------- 
 *weights*                           0   36,904       0        0 
 *activations*                       0        0       0   60,000 
 *io*                                0        0       0        0 
 ----------------------------- ------- -------- ------- -------- 
 TOTAL                           9,148   37,040   2,381   60,160 
 ----------------------------- ------- -------- ------- -------- 
 *  toolchain objects (libm/libgcc*)
 ** RT - AI runtime objects (kernels+infrastructure)
  
  Summary per memory device type
  --------------------------------------------
  .\device      FLASH       %      RAM      % 
  --------------------------------------------
  RT total     11,665   24.0%    2,541   4.1% 
  --------------------------------------------
  TOTAL        48,569           62,541        
  --------------------------------------------


Generated files (7)
------------------------------------------------------------------------------- 
/home/louison/.stm32cubemx/model_pendulum_output/model_pendulum_config.h        
/home/louison/.stm32cubemx/model_pendulum_output/model_pendulum.h               
/home/louison/.stm32cubemx/model_pendulum_output/model_pendulum.c               
/home/louison/.stm32cubemx/model_pendulum_output/model_pendulum_data_params.h   
/home/louison/.stm32cubemx/model_pendulum_output/model_pendulum_data_params.c   
/home/louison/.stm32cubemx/model_pendulum_output/model_pendulum_data.h          
/home/louison/.stm32cubemx/model_pendulum_output/model_pendulum_data.c          
